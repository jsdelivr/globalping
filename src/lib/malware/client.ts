import type { CustomHelpers, ErrorReport } from 'joi';
import {
	updateList as updateIpList,
	populateMemList as populateMemIpList,
	validate as validateIp,
} from './ip.js';

import {
	updateList as updateDomainList,
	populateMemList as populateMemDomainList,
	validate as validateDomain,
} from './domain.js';

export const updateMalwareFiles = async (): Promise<void> => {
	await updateIpList();
	await updateDomainList();
};

export const populateMemList = async (): Promise<void> => {
	await populateMemIpList();
	await populateMemDomainList();
};

export const validate = (target: string): boolean => {
	const ipCheck = validateIp(target);
	const domainCheck = validateDomain(target);

	return ipCheck && domainCheck;
};

export const joiValidate = (value: string, helpers?: CustomHelpers): string | ErrorReport | Error => {
	const isValid = validate(value);

	if (!isValid) {
		if (helpers) {
			return helpers.error('any.blacklisted');
		}

		throw new Error('any.blacklisted');
	}

	return String(value);
};

export const joiSchemaErrorMessages = {
	'ip.blacklisted': `{{#label}} is a blacklisted address`,
	'domain.blacklisted': `{{#label}} is a blacklisted domain`,
	'any.blacklisted': `{{#label}} is a blacklisted address or domain`,
};
