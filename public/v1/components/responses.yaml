components:
  responses:
    '400':
      description: |
        If the API couldn't process the request due to malformed parameters or other client errors, it returns status `400 Bad Request`
        and a body with more information about the error. Please modify your request before trying again.
      content:
        application/json:
          schema:
            type: object
            required:
              - error
            properties:
              error:
                type: object
                description: Information about the error.
                required:
                  - type
                  - message
                properties:
                  type:
                    type: string
                    description: The type of the error.
                  message:
                    type: string
                    description: A human-readable description of the error.
                  params:
                    type: object
                    description: Additional information that might be present if the error is related to a specific parameter or payload field.
                    additionalProperties:
                      type: string
          examples:
            json:
              value:
                error:
                  type: validation_error
                  message: Parameter validation failed.
                  params:
                    measurement: '\"measurement\" does not match any of the allowed types'
    '404':
      description: |
        If the API couldn't find the requested resource, it returns status `400 Not Found`
        and a body containing more information about the error.
      content:
        application/json:
          schema:
            type: object
            required:
              - error
            properties:
              error:
                type: object
                required:
                  - type
                  - message
                properties:
                  type:
                    type: string
                  message:
                    type: string
          examples:
            json:
              value:
                error:
                  type: not_found
                  message: Couldn't find the requested item.
    measurements422:
      description: |
        If the API couldn't find suitable probes for your request, it returns status `422 Unprocessable Content` and a body with more
        information about the error. Please modify your request before trying again.
      content:
        application/json:
          schema:
            type: object
            required:
              - error
            properties:
              error:
                type: object
                required:
                  - type
                  - message
                properties:
                  type:
                    type: string
                  message:
                    type: string
          examples:
            json:
              value:
                error:
                  type: no_probes_found
                  message: No suitable probes found.
    measurements429:
#      TODO: add Please review our [API rate limits](https://github.com/jsdelivr/globalping).
      description: |
        If you've exceeded the API rate limit, you'll receive status `429 Too Many Requests` and a body containing more information about the error.
      content:
        application/json:
          schema:
            type: object
            required:
              - error
            properties:
              error:
                type: object
                required:
                  - type
                  - message
                properties:
                  type:
                    type: string
                  message:
                    type: string
          examples:
            json:
              value:
                error:
                  type: rate_limit_exceeded
                  message: API rate limit exceeded.
    measurements202:
      description: |
        If the API accepted the request for processing, it returns status `202 Accepted` and a body containing the ID of the newly created measurement.
        You can use the URL from the `Location` header to retrieve the measurement status.
      headers:
        Location:
          $ref: 'headers.yaml#/components/headers/MeasurementLocation'
        X-RateLimit-Limit:
          $ref: 'headers.yaml#/components/headers/RateLimitLimit'
        X-RateLimit-Consumed:
          $ref: 'headers.yaml#/components/headers/RateLimitConsumed'
        X-RateLimit-Remaining:
          $ref: 'headers.yaml#/components/headers/RateLimitRemaining'
        X-RateLimit-Reset:
          $ref: 'headers.yaml#/components/headers/RateLimitReset'
        X-Credits-Consumed:
          $ref: 'headers.yaml#/components/headers/CreditsConsumed'
        X-Credits-Remaining:
          $ref: 'headers.yaml#/components/headers/CreditsRemaining'
        X-Request-Cost:
          $ref: 'headers.yaml#/components/headers/RequestCost'
      content:
        application/json:
          schema:
            $ref: 'schemas.yaml#/components/schemas/CreateMeasurementResponse'
          examples:
            '0':
              $ref: 'examples.yaml#/components/examples/createMeasurementResponse'
    measurement200:
      description: |
        A successful request returns status `200 OK` and a body containing the requested measurement results.
      content:
        application/json:
          schema:
            allOf:
              - $ref: 'schemas.yaml#/components/schemas/MeasurementOptionsConditions'
              - $ref: 'schemas.yaml#/components/schemas/MeasurementResultsConditions'
              - $ref: 'schemas.yaml#/components/schemas/MeasurementResponse'
          examples:
            pingMeasurement:
              $ref: 'examples.yaml#/components/examples/getPingMeasurementResponse'
            tracerouteMeasurement:
              $ref: 'examples.yaml#/components/examples/getTracerouteMeasurementResponse'
            simpleDnsMeasurement:
              $ref: 'examples.yaml#/components/examples/getSimpleDnsMeasurementResponse'
            traceDnsMeasurement:
              $ref: 'examples.yaml#/components/examples/getTraceDnsMeasurementResponse'
            mtrMeasurement:
              $ref: 'examples.yaml#/components/examples/getMtrMeasurementResponse'
            httpMeasurement:
              $ref: 'examples.yaml#/components/examples/getHttpMeasurementResponse'
    measurement429:
      description: |
        If you've exceeded the API rate limit, you'll receive status `429 Too Many Requests` and a body containing more information about the error.
      headers:
        Retry-After:
          $ref: 'headers.yaml#/components/headers/RetryAfter'
      content:
        application/json:
          schema:
            type: object
            required:
              - error
            properties:
              error:
                type: object
                required:
                  - type
                  - message
                properties:
                  type:
                    type: string
                  message:
                    type: string
          examples:
            json:
              value:
                error:
                  type: too_many_requests
                  message: Too many requests. Please retry in 4 seconds.
    probes200:
      description: |
        A successful request returns status `200 OK` and a body containing a list of all probes currently online and their metadata.
      content:
        application/json:
          schema:
            $ref: 'schemas.yaml#/components/schemas/Probes'
          examples:
            '0':
              $ref: 'examples.yaml#/components/examples/probes'
    limits:
      description: |
        A successful request returns status `200 OK` and a body containing information about the current rate limits and user credits.
      content:
        application/json:
          schema:
            $ref: 'schemas.yaml#/components/schemas/Limits'
          examples:
            noAuthLimits:
              $ref: 'examples.yaml#/components/examples/nonAuthenticatedLimits'
            authLimits:
              $ref: 'examples.yaml#/components/examples/authenticatedLimits'
