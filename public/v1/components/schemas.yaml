components:
  schemas:
    AsnCode:
      type: integer
      description: An autonomous system number (ASN).
    CountryCode:
      type: string
      description: A two-letter country code based on [ISO 3166-1 alpha-2](https://en.wikipedia.org/wiki/ISO_3166-1_alpha-2#Officially_assigned_code_elements).
    ContinentCode:
      type: string
      description: A two-letter continent code.
      enum:
        - AF
        - AN
        - AS
        - EU
        - NA
        - OC
        - SA
    CityName:
      type: string
      description: A city name in English.
    CreateMeasurementResponse:
      description: Contains information about the newly created measurement.
      type: object
      required:
        - id
        - probesCount
      properties:
        id:
          type: string
          description: |
            The measurement ID.
            > **Tip**: You can use the ID to create a new measurement request, reusing the same probes.
        probesCount:
          $ref: 'schemas.yaml#/components/schemas/MeasurementProbesCount'
    Latitude:
      type: number
      description: The latitude of probe location.
    Longitude:
      type: number
      description: The longitude of probe location.
    MeasurementLimit:
      type: integer
      description: |
        The maximum number of probes that should run the measurement.
        The result count might be lower if there aren't enough probes available in the specified locations.
        Mutually exclusive with the `limit` property that can be set for individual locations.
      minimum: 1
      maximum: 500
      default: 1
    MeasurementLocationOption:
      type: object
      additionalProperties: false
      properties:
        continent:
          $ref: 'schemas.yaml#/components/schemas/ContinentCode'
        region:
          $ref: 'schemas.yaml#/components/schemas/RegionName'
        country:
          $ref: 'schemas.yaml#/components/schemas/CountryCode'
        state:
          $ref: 'schemas.yaml#/components/schemas/StateCode'
        city:
          $ref: 'schemas.yaml#/components/schemas/CityName'
        asn:
          $ref: 'schemas.yaml#/components/schemas/AsnCode'
        network:
          $ref: 'schemas.yaml#/components/schemas/NetworkName'
        tags:
          $ref: 'schemas.yaml#/components/schemas/Tags'
        magic:
          type: string
          description: |
            Locations defined in a single string instead of the respective location properties.
            The API performs fuzzy matching on the `country`, `city`, `state`, `continent`, `region`, `asn` (using `AS` prefix, e.g., `AS123`), `tags`, and `network` values.
            Supports full names, ISO codes (where applicable), and common aliases.
            Multiple conditions can be combined using the `+` character, which behaves like a logical `AND`.
        limit:
          type: integer
          description: |
            The maximum number of probes that should run the measurement in this location.
            The result count might be lower if there aren't enough probes available in this location.
            Mutually exclusive with the global `limit` property.
          minimum: 1
          maximum: 200
          default: 1
    MeasurementLocations:
      oneOf:
        - type: array
          description: |
            An array of locations from which to run the measurement. Each object specifies a location using one or more keys, such as country, city, ASN, etc.
          items:
            $ref: 'schemas.yaml#/components/schemas/MeasurementLocationOption'
        - type: string
          description: |
            The `id` of a previous measurement whose probes you want to reuse.
            The probes are returned in the same order as in the previous measurement.
            Measurement type and options are not reused and need to be specified in the request.
            Note that this option only works for the lifetime of the original measurement
            and will result in a `422` response for expired or invalid `id` values.
    MeasurementOptions:
      description: Additional optional fields depending on the measurement `type`.
      anyOf:
        - $ref: 'schemas.yaml#/components/schemas/MeasurementPingOptions'
        - $ref: 'schemas.yaml#/components/schemas/MeasurementTracerouteOptions'
        - $ref: 'schemas.yaml#/components/schemas/MeasurementDnsOptions'
        - $ref: 'schemas.yaml#/components/schemas/MeasurementMtrOptions'
        - $ref: 'schemas.yaml#/components/schemas/MeasurementHttpOptions'
    MeasurementOptionsConditions:
      allOf:
        - if:
            type: object
            properties:
              type:
                const: ping
          then:
            type: object
            properties:
              measurementOptions:
                $ref: 'schemas.yaml#/components/schemas/MeasurementPingOptions'
        - if:
            type: object
            properties:
              type:
                const: traceroute
          then:
            type: object
            properties:
              measurementOptions:
                $ref: 'schemas.yaml#/components/schemas/MeasurementTracerouteOptions'
        - if:
            type: object
            properties:
              type:
                const: dns
          then:
            type: object
            properties:
              measurementOptions:
                $ref: 'schemas.yaml#/components/schemas/MeasurementDnsOptions'
        - if:
            type: object
            properties:
              type:
                const: mtr
          then:
            type: object
            properties:
              measurementOptions:
                $ref: 'schemas.yaml#/components/schemas/MeasurementMtrOptions'
        - if:
            type: object
            properties:
              type:
                const: http
          then:
            type: object
            properties:
              measurementOptions:
                $ref: 'schemas.yaml#/components/schemas/MeasurementHttpOptions'
    MeasurementResultsConditions:
      allOf:
        - if:
            type: object
            properties:
              type:
                const: ping
              results:
                type: array
                items:
                  type: object
                  properties:
                    result:
                      type: object
                      properties:
                        status:
                          const: finished
          then:
            type: object
            properties:
              results:
                type: array
                items:
                  type: object
                  properties:
                    result:
                      $ref: 'schemas.yaml#/components/schemas/FinishedPingTestResult'
        - if:
            type: object
            properties:
              type:
                const: traceroute
              results:
                type: array
                items:
                  type: object
                  properties:
                    result:
                      type: object
                      properties:
                        status:
                          const: finished

          then:
            type: object
            properties:
              results:
                type: array
                items:
                  type: object
                  properties:
                    result:
                      $ref: 'schemas.yaml#/components/schemas/FinishedTracerouteTestResult'
        - if:
            type: object
            properties:
              type:
                const: dns
              results:
                type: array
                items:
                  type: object
                  properties:
                    result:
                      type: object
                      properties:
                        status:
                          const: finished

          then:
            type: object
            properties:
              results:
                type: array
                items:
                  type: object
                  properties:
                    result:
                      $ref: 'schemas.yaml#/components/schemas/FinishedDnsTestResult'
        - if:
            type: object
            properties:
              type:
                const: mtr
              results:
                type: array
                items:
                  type: object
                  properties:
                    result:
                      type: object
                      properties:
                        status:
                          const: finished

          then:
            type: object
            properties:
              results:
                type: array
                items:
                  type: object
                  properties:
                    result:
                      $ref: 'schemas.yaml#/components/schemas/FinishedMtrTestResult'
        - if:
            type: object
            properties:
              type:
                const: http
              results:
                type: array
                items:
                  type: object
                  properties:
                    result:
                      type: object
                      properties:
                        status:
                          const: finished

          then:
            type: object
            properties:
              results:
                type: array
                items:
                  type: object
                  properties:
                    result:
                      $ref: 'schemas.yaml#/components/schemas/FinishedHttpTestResult'
    MeasurementPingOptions:
      type: object
      title: PingOptions
      additionalProperties: false
      properties:
        packets:
          type: integer
          description: The number of packets to send.
          default: 3
          minimum: 1
          maximum: 16
        ipVersion:
          type: integer
          description: |
            EXPERIMENTAL: The IP version to use. Only allowed if the target is a hostname.
          enum:
            - 4
            - 6
    MeasurementTracerouteOptions:
      type: object
      title: TracerouteOptions
      additionalProperties: false
      properties:
        port:
          type: integer
          description: The destination port for the data packets.
          minimum: 0
          maximum: 65535
          default: 80
        protocol:
          type: string
          description: The transport protocol to use.
          enum:
            - ICMP
            - TCP
            - UDP
          default: ICMP
        ipVersion:
          type: integer
          description: |
            EXPERIMENTAL: The IP version to use. Only allowed if the target is a hostname.
          enum:
            - 4
            - 6
    MeasurementDnsOptions:
      type: object
      title: DnsOptions
      additionalProperties: false
      properties:
        query:
          type: object
          description: The DNS query properties.
          additionalProperties: false
          properties:
            type:
              type: string
              description: The type of DNS query.
              enum:
                - A
                - AAAA
                - ANY
                - CNAME
                - DNSKEY
                - DS
                - HTTPS
                - MX
                - NS
                - NSEC
                - PTR
                - RRSIG
                - SOA
                - TXT
                - SRV
              default: A
        resolver:
          $ref: 'schemas.yaml#/components/schemas/MeasurementResolver'
        port:
          type: integer
          description: The port number to send the query to.
          minimum: 0
          maximum: 65535
          default: 53
        protocol:
          type: string
          description: The protocol to use for the DNS query.
          enum:
            - TCP
            - UDP
          default: UDP
        ipVersion:
          type: integer
          description: |
            EXPERIMENTAL: The IP version to use. Only allowed if the target is a hostname.
          enum:
            - 4
            - 6
        trace:
          type: boolean
          description: |
            Toggles tracing of the delegation path from the root servers down to the target domain name.
          default: false
    MeasurementMtrOptions:
      type: object
      title: MtrOptions
      additionalProperties: false
      properties:
        port:
          type: integer
          description: The port number to use.
          minimum: 0
          maximum: 65535
          default: 80
        protocol:
          type: string
          description: The transport protocol to use.
          enum:
            - ICMP
            - TCP
            - UDP
          default: ICMP
        ipVersion:
          type: integer
          description: |
            EXPERIMENTAL: The IP version to use. Only allowed if the target is a hostname.
          enum:
            - 4
            - 6
        packets:
          type: integer
          description: The number of packets to send to each hop.
          default: 3
          minimum: 1
          maximum: 16
    MeasurementHttpOptions:
      type: object
      title: HttpOptions
      additionalProperties: false
      properties:
        request:
          type: object
          description: The HTTP request properties.
          additionalProperties: false
          properties:
            host:
              type: string
              description: |
                An optional override for the `Host` header. The default value is based on the `target`.
            path:
              type: string
              description: The path portion of the URL.
            query:
              type: string
              description: The query string portion of the URL.
            method:
              type: string
              description: The HTTP method to use.
              enum:
                - HEAD
                - GET
                - OPTIONS
              default: HEAD
            headers:
              type: object
              description: |
                Additional request headers. Note that the `Host` and `User-Agent` are reserved and internally overridden.
              additionalProperties:
                type: string
        resolver:
          $ref: 'schemas.yaml#/components/schemas/MeasurementResolver'
        port:
          type: integer
          description: The port number to use.
          minimum: 0
          maximum: 65535
          default: 80
        protocol:
          type: string
          description: The transport protocol to use.
          enum:
            - HTTP
            - HTTPS
            - HTTP2
          default: HTTPS
        ipVersion:
          type: integer
          description: |
            EXPERIMENTAL: The IP version to use. Only allowed if the target is a hostname.
          enum:
            - 4
            - 6
    MeasurementProbesCount:
      type: integer
      description: |
        The actual number of probes that performed the measurement tests.
        Smaller or equal to `limit`, depending on probe availability.
    MeasurementResolver:
      description: A DNS resolver to use for the query. Defaults to the probe system resolver.
      anyOf:
        - type: string
          format: ipv4
          description: The IPv4 address of the resolver.
        - type: string
          format: ipv6
          description: |
            EXPERIMENTAL: The IPv6 address of the resolver.
        - type: string
          format: hostname
          description: The Fully Qualified Domain Name (FQDN) of the resolver.
    MeasurementResultItem:
      type: object
      required:
        - probe
        - result
      properties:
        probe:
          allOf:
            - $ref: 'schemas.yaml#/components/schemas/ProbeLocation'
            - type: object
              description: Information about the probe that performed this test, such as its location, tags, and resolvers.
              required:
                - tags
                - resolvers
              properties:
                tags:
                  $ref: 'schemas.yaml#/components/schemas/Tags'
                resolvers:
                  $ref: 'schemas.yaml#/components/schemas/ProbeResolvers'
        result:
          $ref: 'schemas.yaml#/components/schemas/TestResult'
    MeasurementStatus:
      type: string
      description: The current measurement status. Any value other than `in-progress` is final.
      enum:
        - in-progress
        - finished
    MeasurementTarget:
      type: string
      description: |
        A publicly reachable measurement target.
        Typically a hostname, an IPv4 address, or IPv6 address, depending on the measurement `type`.
        Support for IPv6 targets is currently considered experimental.
    MeasurementType:
      type: string
      description: The measurement type.
      enum:
        - ping
        - traceroute
        - dns
        - mtr
        - http
    MeasurementRequest:
      allOf:
        - $ref: 'schemas.yaml#/components/schemas/MeasurementOptionsConditions'
        - type: object
          additionalProperties: false
          required:
            - type
            - target
          properties:
            type:
              $ref: 'schemas.yaml#/components/schemas/MeasurementType'
            target:
              $ref: 'schemas.yaml#/components/schemas/MeasurementTarget'
            inProgressUpdates:
              type: boolean
              description: |
                Indicates whether you want to get partial results while the measurement is still running:
                - If `true`, partial results are returned as soon as they are available, and you can present them to the user in real time. Note that only the first 5 tests from the `results` array will update in real time.
                - If `false`, the result of each test is updated only after the test finishes.
              default: false
            locations:
              $ref: 'schemas.yaml#/components/schemas/MeasurementLocations'
            limit:
              $ref: 'schemas.yaml#/components/schemas/MeasurementLimit'
            measurementOptions:
              $ref: 'schemas.yaml#/components/schemas/MeasurementOptions'
    MeasurementResponse:
      type: object
      required:
        - id
        - type
        - status
        - createdAt
        - updatedAt
        - target
        - probesCount
        - results
      properties:
        id:
          type: string
          description: The measurement ID.
        type:
          $ref: 'schemas.yaml#/components/schemas/MeasurementType'
        target:
          $ref: 'schemas.yaml#/components/schemas/MeasurementTarget'
        status:
          $ref: 'schemas.yaml#/components/schemas/MeasurementStatus'
        createdAt:
          type: string
          format: date-time
          description: The date and time when the measurement was created.
        updatedAt:
          type: string
          format: date-time
          description: The date and time when the measurement was last updated.
        probesCount:
          $ref: 'schemas.yaml#/components/schemas/MeasurementProbesCount'
        locations:
          type: array
          description: |
            The locations you specified when creating the measurement.
            If you passed in an `id` of a previous measurement, the value will be filled in from that measurement.
          items:
            $ref: 'schemas.yaml#/components/schemas/MeasurementLocationOption'
        limit:
          allOf:
            - $ref: 'schemas.yaml#/components/schemas/MeasurementLimit'
            - description: The limit you specified when creating the measurement if different from the default value.
        measurementOptions:
          allOf:
            - $ref: 'schemas.yaml#/components/schemas/MeasurementOptions'
            - description: The options you specified when creating the measurement if different from the default.
        results:
          type: array
          description: An array containing the measurement results.
          items:
            $ref: 'schemas.yaml#/components/schemas/MeasurementResultItem'
    NetworkName:
      type: string
      description: A network name, such as "Google LLC" or "DigitalOcean, LLC".
    NullableInteger:
      type:
        - integer
        - 'null'
    NullableNumber:
      type:
        - number
        - 'null'
    Probe:
      type: object
      required:
        - version
        - location
        - tags
        - resolvers
      properties:
        version:
          type: string
          description: The probe version.
        location:
          $ref: 'schemas.yaml#/components/schemas/ProbeLocation'
        tags:
          $ref: 'schemas.yaml#/components/schemas/Tags'
        resolvers:
          $ref: 'schemas.yaml#/components/schemas/ProbeResolvers'
    ProbeLocation:
      type: object
      description: The probe location information.
      required:
        - continent
        - region
        - country
        - state
        - city
        - asn
        - network
        - latitude
        - longitude
      properties:
        continent:
          $ref: 'schemas.yaml#/components/schemas/ContinentCode'
        region:
          $ref: 'schemas.yaml#/components/schemas/RegionName'
        country:
          $ref: 'schemas.yaml#/components/schemas/CountryCode'
        state:
          $ref: 'schemas.yaml#/components/schemas/StateCode'
        city:
          $ref: 'schemas.yaml#/components/schemas/CityName'
        asn:
          $ref: 'schemas.yaml#/components/schemas/AsnCode'
        network:
          $ref: 'schemas.yaml#/components/schemas/NetworkName'
        latitude:
          $ref: 'schemas.yaml#/components/schemas/Latitude'
        longitude:
          $ref: 'schemas.yaml#/components/schemas/Longitude'
    ProbeResolver:
      anyOf:
        - type: string
          format: ipv4
          description: The IPv4 address of the resolver.
        - type: string
          format: ipv6
          description: |
            EXPERIMENTAL: The IPv6 address of the resolver.
        - type: string
          const: private
          description: Indicates that the resolver points to a private IP address.
    ProbeResolvers:
      type: array
      description: An array of the default resolvers configured on the probe.
      items:
        $ref: 'schemas.yaml#/components/schemas/ProbeResolver'
    Probes:
      type: array
      items:
        $ref: 'schemas.yaml#/components/schemas/Probe'
    RegionName:
      type: string
      description: |
        A geographic region name based on UN [Standard Country or Area Codes for Statistical Use (M49)](https://unstats.un.org/unsd/methodology/m49/).
      enum:
        - Northern Africa
        - Eastern Africa
        - Middle Africa
        - Southern Africa
        - Western Africa

        - Caribbean
        - Central America
        - South America
        - Northern America

        - Central Asia
        - Eastern Asia
        - South-eastern Asia
        - Southern Asia
        - Western Asia

        - Eastern Europe
        - Northern Europe
        - Southern Europe
        - Western Europe

        - Australia and New Zealand
        - Melanesia
        - Micronesia
        - Polynesia
    ResolvedAddress:
      type:
        - string
        - 'null'
      description: The resolved IP address of the `target`.
    ResolvedHostname:
      type:
        - string
        - 'null'
      description: The resolved hostname of the `target`.
    StateCode:
      type:
        - string
        - 'null'
      description: A two-letter [US state code](https://www.faa.gov/air_traffic/publications/atpubs/cnt_html/appendix_a.html).
    StatsRttMin:
      type: number
      description: The lowest `rtt` value.
    StatsRttMinNullable:
      allOf:
        - $ref: 'schemas.yaml#/components/schemas/NullableNumber'
        - description: The lowest `rtt` value.
    StatsRttAvg:
      type: number
      description: The average `rtt` value.
    StatsRttAvgNullable:
      allOf:
        - $ref: 'schemas.yaml#/components/schemas/NullableNumber'
        - description: The average `rtt` value.
    StatsRttMax:
      type: number
      description: The highest `rtt` value.
    StatsRttMaxNullable:
      allOf:
        - $ref: 'schemas.yaml#/components/schemas/NullableNumber'
        - description: The highest `rtt` value.
    StatsPacketsTotal:
      type: integer
      description: The number of packets sent.
    StatsPacketsRcv:
      type: integer
      description: The number of received packets.
    StatsPacketsDrop:
      type: integer
      description: The number of dropped packets (`total` - `rcv`).
    StatsPacketsLoss:
      type: number
      description: The percentage of dropped packets.
    StatsJitterMin:
      type: number
      description: The lowest jitter value.
    StatsJitterAvg:
      type: number
      description: The average jitter value.
    StatsJitterMax:
      type: number
      description: The highest jitter value.
    StatsStDev:
      type: number
      description: The standard deviation of the `rtt` values.
    Tags:
      type: array
      description: |
        An array of additional values to fine-tune probe selection:
        - Probes hosted in [AWS](https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/using-regions-availability-zones.html#concepts-available-regions) and [Google Cloud](https://cloud.google.com/compute/docs/regions-zones#available) are automatically assigned the service region code. For example: `aws-eu-west-1` and `gcp-us-south1`.
        - Probes are automatically assigned `datacenter-network` and `eyeball-network` tags to distinguish between datacenter and end-user locations.
      items:
        type: string
    TestResult:
      anyOf:
        - $ref: 'schemas.yaml#/components/schemas/InProgressTestResult'
        - $ref: 'schemas.yaml#/components/schemas/FailedTestResult'
        - $ref: 'schemas.yaml#/components/schemas/OfflineTestResult'
        - $ref: 'schemas.yaml#/components/schemas/FinishedPingTestResult'
        - $ref: 'schemas.yaml#/components/schemas/FinishedTracerouteTestResult'
        - $ref: 'schemas.yaml#/components/schemas/FinishedDnsTestResult'
        - $ref: 'schemas.yaml#/components/schemas/FinishedMtrTestResult'
        - $ref: 'schemas.yaml#/components/schemas/FinishedHttpTestResult'
    BaseFinishedTestResult:
      type: object
      required:
        - status
        - rawOutput
      properties:
        status:
          $ref: 'schemas.yaml#/components/schemas/FinishedTestStatus'
        rawOutput:
          $ref: 'schemas.yaml#/components/schemas/TestRawOutput'
    InProgressTestResult:
      type: object
      title: InProgressTestResult
      description: |
        Represents an `in-progress` test where most fields are not yet available.
      required:
        - status
        - rawOutput
      properties:
        status:
          $ref: 'schemas.yaml#/components/schemas/InProgressTestStatus'
        rawOutput:
          $ref: 'schemas.yaml#/components/schemas/TestRawOutput'
    FailedTestResult:
      type: object
      title: FailedTestResult
      description: |
        Represents a `failed` test where most fields are not available.
      required:
        - status
        - rawOutput
      properties:
        status:
          $ref: 'schemas.yaml#/components/schemas/FailedTestStatus'
        rawOutput:
          $ref: 'schemas.yaml#/components/schemas/TestRawOutput'
    OfflineTestResult:
      type: object
      title: OfflineTestResult
      description: |
        Represents an `offline` test where the requested probe was not available to run the test and most fields are not available.
        Only possible when you pass the `id` of a previous measurement in the `locations` field.
      required:
        - status
        - rawOutput
      properties:
        status:
          $ref: 'schemas.yaml#/components/schemas/OfflineTestStatus'
        rawOutput:
          $ref: 'schemas.yaml#/components/schemas/TestRawOutput'
    FinishedPingTestResult:
      title: FinishedPingTestResult
      description: Represents a `finished` ping test.
      allOf:
        - $ref: 'schemas.yaml#/components/schemas/BaseFinishedTestResult'
        - type: object
          required:
            - resolvedAddress
            - resolvedHostname
            - stats
            - timings
          properties:
            resolvedAddress:
              $ref: 'schemas.yaml#/components/schemas/ResolvedAddress'
            resolvedHostname:
              $ref: 'schemas.yaml#/components/schemas/ResolvedHostname'
            stats:
              type: object
              description: |
                Summary `rtt` and packet loss statistics.
                All times are in milliseconds.
              required:
                - min
                - avg
                - max
                - total
                - rcv
                - drop
                - loss
              properties:
                min:
                  $ref: 'schemas.yaml#/components/schemas/StatsRttMinNullable'
                avg:
                  $ref: 'schemas.yaml#/components/schemas/StatsRttAvgNullable'
                max:
                  $ref: 'schemas.yaml#/components/schemas/StatsRttMaxNullable'
                total:
                  $ref: 'schemas.yaml#/components/schemas/StatsPacketsTotal'
                rcv:
                  $ref: 'schemas.yaml#/components/schemas/StatsPacketsRcv'
                drop:
                  $ref: 'schemas.yaml#/components/schemas/StatsPacketsDrop'
                loss:
                  $ref: 'schemas.yaml#/components/schemas/StatsPacketsLoss'
            timings:
              type: array
              description: |
                An array containing details for each packet.
                All times are in milliseconds.
              items:
                type: object
                required:
                  - rtt
                  - ttl
                properties:
                  rtt:
                    $ref: 'schemas.yaml#/components/schemas/TimingPacketRtt'
                  ttl:
                    $ref: 'schemas.yaml#/components/schemas/TimingPacketTtl'
    FinishedTracerouteTestResult:
      title: FinishedTracerouteTestResult
      description: Represents a `finished` traceroute test.
      allOf:
        - $ref: 'schemas.yaml#/components/schemas/BaseFinishedTestResult'
        - type: object
          required:
            - resolvedAddress
            - resolvedHostname
            - hops
          properties:
            resolvedAddress:
              $ref: 'schemas.yaml#/components/schemas/ResolvedAddress'
            resolvedHostname:
              $ref: 'schemas.yaml#/components/schemas/ResolvedHostname'
            hops:
              type: array
              description: An array containing details about each hop.
              items:
                type: object
                required:
                  - resolvedAddress
                  - resolvedHostname
                  - timings
                properties:
                  resolvedAddress:
                    $ref: 'schemas.yaml#/components/schemas/ResolvedAddress'
                  resolvedHostname:
                    $ref: 'schemas.yaml#/components/schemas/ResolvedHostname'
                  timings:
                    type: array
                    description: |
                      An array containing details for each packet.
                      All times are in milliseconds.
                    items:
                      type: object
                      required:
                        - rtt
                      properties:
                        rtt:
                          $ref: 'schemas.yaml#/components/schemas/TimingPacketRtt'
    FinishedDnsTestResult:
      title: FinishedDnsTestResult
      anyOf:
        - $ref: 'schemas.yaml#/components/schemas/FinishedSimpleDnsTestResult'
        - $ref: 'schemas.yaml#/components/schemas/FinishedTraceDnsTestResult'
    DnsStatusCode:
      type: integer
      description: The DNS [response code](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#table-dns-parameters-6).
    DnsStatusCodeName:
      type: string
      description: The DNS [response code name](https://www.iana.org/assignments/dns-parameters/dns-parameters.xhtml#table-dns-parameters-6).
    HttpStatusCode:
      type: integer
      description: The HTTP response status code.
    HttpStatusCodeName:
      type: string
      description: The HTTP response status code name.
    FinishedSimpleDnsTestResult:
      title: FinishedSimpleDnsTestResult
      description: Represents a `finished` DNS test with `trace` disabled.
      allOf:
        - $ref: 'schemas.yaml#/components/schemas/BaseFinishedTestResult'
        - type: object
          required:
            - statusCode
            - statusCodeName
          properties:
            statusCode:
              $ref: 'schemas.yaml#/components/schemas/DnsStatusCode'
            statusCodeName:
              $ref: 'schemas.yaml#/components/schemas/DnsStatusCodeName'
        - $ref: 'schemas.yaml#/components/schemas/DnsTestHopResult'
    FinishedTraceDnsTestResult:
      title: FinishedTraceDnsTestResult
      description: Represents a `finished` DNS test with `trace` enabled.
      allOf:
        - $ref: 'schemas.yaml#/components/schemas/BaseFinishedTestResult'
        - type: object
          required:
            - hops
          properties:
            hops:
              type: array
              description: An array containing details about each hop.
              items:
                $ref: 'schemas.yaml#/components/schemas/DnsTestHopResult'
    DnsTestHopResult:
      type: object
      required:
        - resolver
        - answers
        - timings
      properties:
        resolver:
          type: string
          description: The hostname or IP of the resolver that answered the query.
        answers:
          type: array
          description: An array of the received resource records.
          items:
            $ref: 'schemas.yaml#/components/schemas/DnsTestAnswer'
        timings:
          type: object
          description: |
            Details about the query times.
            All times are in milliseconds.
          required:
            - total
          properties:
            total:
              type: number
              description: The total query time.
    DnsTestAnswer:
      type: object
      required:
        - name
        - type
        - ttl
        - class
        - value
      properties:
        name:
          type: string
          description: The record domain name.
        type:
          type: string
          description: The record type.
        ttl:
          type: integer
          description: The record time-to-live value in seconds.
        class:
          type: string
          description: The record class.
        value:
          type: string
          description: The record value.
    FinishedMtrTestResult:
      title: FinishedMtrTestResult
      description: Represents a `finished` MTR test.
      allOf:
        - $ref: 'schemas.yaml#/components/schemas/BaseFinishedTestResult'
        - type: object
          required:
            - resolvedAddress
            - resolvedHostname
            - hops
          properties:
            resolvedAddress:
              $ref: 'schemas.yaml#/components/schemas/ResolvedAddress'
            resolvedHostname:
              $ref: 'schemas.yaml#/components/schemas/ResolvedHostname'
            hops:
              type: array
              description: An array containing details about each hop.
              items:
                type: object
                required:
                  - resolvedAddress
                  - resolvedHostname
                  - asn
                  - timings
                  - stats
                properties:
                  resolvedAddress:
                    allOf:
                      - $ref: 'schemas.yaml#/components/schemas/ResolvedAddress'
                      - description: The resolved IP address of this hop.
                  resolvedHostname:
                    allOf:
                      - $ref: 'schemas.yaml#/components/schemas/ResolvedHostname'
                      - description: The resolved hostname of this hop.
                  asn:
                    type: array
                    description: An array containing the ASNs assigned to this hop.
                    items:
                      type: integer
                  stats:
                    type: object
                    description: |
                      Summary `rtt` and packet loss statistics.
                      All times are in milliseconds.
                    required:
                      - min
                      - avg
                      - max
                      - stDev
                      - jMin
                      - jAvg
                      - jMax
                      - total
                      - rcv
                      - drop
                      - loss
                    properties:
                      min:
                        $ref: 'schemas.yaml#/components/schemas/StatsRttMin'
                      avg:
                        $ref: 'schemas.yaml#/components/schemas/StatsRttAvg'
                      max:
                        $ref: 'schemas.yaml#/components/schemas/StatsRttMax'
                      stDev:
                        $ref: 'schemas.yaml#/components/schemas/StatsStDev'
                      jMin:
                        $ref: 'schemas.yaml#/components/schemas/StatsJitterMin'
                      jAvg:
                        $ref: 'schemas.yaml#/components/schemas/StatsJitterAvg'
                      jMax:
                        $ref: 'schemas.yaml#/components/schemas/StatsJitterMax'
                      total:
                        $ref: 'schemas.yaml#/components/schemas/StatsPacketsTotal'
                      rcv:
                        $ref: 'schemas.yaml#/components/schemas/StatsPacketsRcv'
                      drop:
                        $ref: 'schemas.yaml#/components/schemas/StatsPacketsDrop'
                      loss:
                        $ref: 'schemas.yaml#/components/schemas/StatsPacketsLoss'
                  timings:
                    type: array
                    description: |
                      An array containing details for each packet.
                      All times are in milliseconds.
                    items:
                      type: object
                      required:
                        - rtt
                      properties:
                        rtt:
                          $ref: 'schemas.yaml#/components/schemas/TimingPacketRtt'
    FinishedHttpTestResult:
      title: FinishedHttpTestResult
      description: Represents a `finished` HTTP test.
      allOf:
        - $ref: 'schemas.yaml#/components/schemas/BaseFinishedTestResult'
        - type: object
          required:
            - rawHeaders
            - rawBody
            - truncated
            - headers
            - resolvedAddress
            - statusCode
            - statusCodeName
            - timings
            - tls
          properties:
            rawHeaders:
              type: string
              description: The raw HTTP response headers.
            rawBody:
              type:
                - string
                - 'null'
              description: |
                The raw HTTP response body or `null` if there was no body in response.
                Note that only the first 10 kb are returned.
            truncated:
              type: boolean
              description: |
                Indicates whether the `rawBody` value was truncated due to being too big.
            headers:
              type: object
              description: The HTTP response headers. The value may be an array of strings for headers with multiple values, e.g., `Set-Cookie`.
              additionalProperties:
                oneOf:
                  - type: string
                  - type: array
                    items:
                      type: string
            statusCode:
              $ref: 'schemas.yaml#/components/schemas/HttpStatusCode'
            statusCodeName:
              $ref: 'schemas.yaml#/components/schemas/HttpStatusCodeName'
            resolvedAddress:
              $ref: 'schemas.yaml#/components/schemas/ResolvedAddress'
            timings:
              type: object
              description: |
                Details about the HTTP request times.
                All times are in milliseconds.
              required:
                - total
                - dns
                - tcp
                - tls
                - firstByte
                - download
              properties:
                total:
                  $ref: 'schemas.yaml#/components/schemas/TimingHttpTotalNullable'
                dns:
                  $ref: 'schemas.yaml#/components/schemas/TimingHttpDnsNullable'
                tcp:
                  $ref: 'schemas.yaml#/components/schemas/TimingHttpTcpNullable'
                tls:
                  $ref: 'schemas.yaml#/components/schemas/TimingHttpTlsNullable'
                firstByte:
                  $ref: 'schemas.yaml#/components/schemas/TimingHttpFirstByteNullable'
                download:
                  $ref: 'schemas.yaml#/components/schemas/TimingHttpDownloadNullable'
            tls:
              description: Information about the TLS certificate or `null` if no TLS certificate is available.
              oneOf:
                - $ref: 'schemas.yaml#/components/schemas/TlsCertificate'
                - type: 'null'
    TestRawOutput:
      type: string
      description: |
        The raw output of the test. Can be presented to users but is not meant to be parsed by clients.
        Please use the individual values provided in other fields for automated processing.
    BaseTestStatus:
      type: string
      description: The current test status. Any value other than `in-progress` is final.
    InProgressTestStatus:
      allOf:
        - $ref: 'schemas.yaml#/components/schemas/BaseTestStatus'
        - const: in-progress
    FinishedTestStatus:
      allOf:
        - $ref: 'schemas.yaml#/components/schemas/BaseTestStatus'
        - const: finished
    FailedTestStatus:
      allOf:
        - $ref: 'schemas.yaml#/components/schemas/BaseTestStatus'
        - const: failed
    OfflineTestStatus:
      allOf:
        - $ref: 'schemas.yaml#/components/schemas/BaseTestStatus'
        - const: offline
    TimingPacketRtt:
      type: number
      description: The round-trip time for this packet.
    TimingPacketTtl:
      type: number
      description: The time-to-live value of this packet.
    TimingHttpTotalNullable:
      allOf:
        - $ref: 'schemas.yaml#/components/schemas/NullableInteger'
        - description: The total HTTP request time.
    TimingHttpDnsNullable:
      allOf:
        - $ref: 'schemas.yaml#/components/schemas/NullableInteger'
        - description: The time required to perform the DNS lookup.
    TimingHttpTcpNullable:
      allOf:
        - $ref: 'schemas.yaml#/components/schemas/NullableInteger'
        - description: The time from performing the DNS lookup to establishing the TCP connection.
    TimingHttpTlsNullable:
      allOf:
        - $ref: 'schemas.yaml#/components/schemas/NullableInteger'
        - description: The time from establishing the TCP connection to establishing the TLS session.
    TimingHttpFirstByteNullable:
      allOf:
        - $ref: 'schemas.yaml#/components/schemas/NullableInteger'
        - description: The time from establishing the TCP/TLS connection to the first response byte.
    TimingHttpDownloadNullable:
      allOf:
        - $ref: 'schemas.yaml#/components/schemas/NullableInteger'
        - description: The time from the first response byte to downloading the entire response.
    TlsCertificate:
      type: object
      title: TlsCertificate
      required:
        - authorized
        - protocol
        - cipherName
        - createdAt
        - expiresAt
        - subject
        - issuer
        - keyType
        - keyBits
        - serialNumber
        - fingerprint256
        - publicKey
      properties:
        authorized:
          type: boolean
          description: |
            Indicates whether a trusted authority signed the certificate.
        protocol:
          type: string
          description: |
            The negotiated SSL/TLS protocol version.
        cipherName:
          type: string
          description: |
            OpenSSL name of the cipher suite.
        error:
          type: string
          description: |
            The reason for rejecting the certificate if `authorized` is `false`.
        createdAt:
          type: string
          description: The creation date and time of the certificate.
          format: date-time
        expiresAt:
          type: string
          description: The expiration date and time of the certificate.
          format: date-time
        subject:
          $ref: 'schemas.yaml#/components/schemas/TlsCertificateSubject'
        issuer:
          $ref: 'schemas.yaml#/components/schemas/TlsCertificateIssuer'
        keyType:
          type:
            - string
            - 'null'
          enum:
            - RSA
            - EC
            - 'null'
          description: The type of the used key, or `null` for unrecognized types.
        keyBits:
          type:
            - number
            - 'null'
          description: The size of the used key, or `null` for unrecognized types.
        serialNumber:
          type: string
          description: |
            The certificate serial number as a : separated HEX string.
        fingerprint256:
          type: string
          description: |
            The SHA-256 digest of the DER-encoded certificate as a : separated HEX string.
        publicKey:
          type:
            - string
            - 'null'
          description: |
            The public key as a : separated HEX string, or `null` for unrecognized types.
    TlsCertificateIssuer:
      type: object
      description: Information about the certificate issuer.
      properties:
        C:
          type: string
          description: The issuer's country.
        O:
          type: string
          description: The issuer's organization.
        CN:
          type: string
          description: The issuer's common name.
    TlsCertificateSubject:
      type: object
      description: Information about the certificate subject.
      properties:
        CN:
          type: string
          description: The subject's common name.
        alt:
          type: string
          description: The subject's alternative names.
    Limits:
      type: object
      required:
        - rateLimit
      properties:
        rateLimit:
          type: object
          description: Object containing rate limits information.
          required:
            - measurements
          properties:
            measurements:
              type: object
              description: Measurements rate limits.
              required:
                - create
              properties:
                create:
                  allOf:
                    - $ref: 'schemas.yaml#/components/schemas/RateLimitDetails'
                    - description: Rate limit for creating measurements.
        credits:
          type: object
          description: Object containing credits information (only for authenticated requests).
          properties:
            remaining:
              type: integer
              description: The number of user's remaining credits.
    RateLimitDetails:
      type: object
      required:
        - type
        - limit
        - remaining
        - reset
      properties:
        type:
          type: string
          description: Type of the rate limit.
          enum:
            - ip
            - user
        limit:
          type: integer
          description: The number of rate limit points available in a given time window.
        remaining:
          type: integer
          description: The number of rate limit points remaining in the current time window.
        reset:
          type: integer
          description: The number of seconds until the limit resets.
